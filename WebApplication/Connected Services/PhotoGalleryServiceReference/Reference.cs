//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication.PhotoGalleryServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PhotoGalleryServiceReference.IPhotoGalleryService")]
    public interface IPhotoGalleryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/GetVenuePhotos", ReplyAction="http://tempuri.org/IPhotoGalleryService/GetVenuePhotosResponse")]
        string[] GetVenuePhotos(string venueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/GetVenuePhotos", ReplyAction="http://tempuri.org/IPhotoGalleryService/GetVenuePhotosResponse")]
        System.Threading.Tasks.Task<string[]> GetVenuePhotosAsync(string venueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/UploadPhoto", ReplyAction="http://tempuri.org/IPhotoGalleryService/UploadPhotoResponse")]
        bool UploadPhoto(string userID, string venueID, byte[] photo, string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/UploadPhoto", ReplyAction="http://tempuri.org/IPhotoGalleryService/UploadPhotoResponse")]
        System.Threading.Tasks.Task<bool> UploadPhotoAsync(string userID, string venueID, byte[] photo, string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/GetLastUploadedPhotoUrl", ReplyAction="http://tempuri.org/IPhotoGalleryService/GetLastUploadedPhotoUrlResponse")]
        string GetLastUploadedPhotoUrl();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/GetLastUploadedPhotoUrl", ReplyAction="http://tempuri.org/IPhotoGalleryService/GetLastUploadedPhotoUrlResponse")]
        System.Threading.Tasks.Task<string> GetLastUploadedPhotoUrlAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPhotoGalleryServiceChannel : WebApplication.PhotoGalleryServiceReference.IPhotoGalleryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhotoGalleryServiceClient : System.ServiceModel.ClientBase<WebApplication.PhotoGalleryServiceReference.IPhotoGalleryService>, WebApplication.PhotoGalleryServiceReference.IPhotoGalleryService {
        
        public PhotoGalleryServiceClient() {
        }
        
        public PhotoGalleryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhotoGalleryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhotoGalleryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhotoGalleryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetVenuePhotos(string venueID) {
            return base.Channel.GetVenuePhotos(venueID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetVenuePhotosAsync(string venueID) {
            return base.Channel.GetVenuePhotosAsync(venueID);
        }
        
        public bool UploadPhoto(string userID, string venueID, byte[] photo, string caption) {
            return base.Channel.UploadPhoto(userID, venueID, photo, caption);
        }
        
        public System.Threading.Tasks.Task<bool> UploadPhotoAsync(string userID, string venueID, byte[] photo, string caption) {
            return base.Channel.UploadPhotoAsync(userID, venueID, photo, caption);
        }
        
        public string GetLastUploadedPhotoUrl() {
            return base.Channel.GetLastUploadedPhotoUrl();
        }
        
        public System.Threading.Tasks.Task<string> GetLastUploadedPhotoUrlAsync() {
            return base.Channel.GetLastUploadedPhotoUrlAsync();
        }
    }
}
